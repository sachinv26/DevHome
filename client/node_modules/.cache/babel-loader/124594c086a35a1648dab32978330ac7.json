{"ast":null,"code":"import _classCallCheck from\"Z:/DevArena/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"Z:/DevArena/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"Z:/DevArena/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"Z:/DevArena/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{connect}from'react-redux';import PostForm from'./PostForm';import PostFeed from'./PostFeed';import Spinner from'../common/Spinner';import{getPosts}from'../../actions/postActions';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Posts=/*#__PURE__*/function(_Component){_inherits(Posts,_Component);var _super=_createSuper(Posts);function Posts(){_classCallCheck(this,Posts);return _super.apply(this,arguments);}_createClass(Posts,[{key:\"componentDidMount\",value:function componentDidMount(){this.props.getPosts();}},{key:\"render\",value:function render(){var _this$props$post=this.props.post,posts=_this$props$post.posts,loading=_this$props$post.loading;var postContent;if(posts===null||loading){postContent=/*#__PURE__*/_jsx(Spinner,{});}else{postContent=/*#__PURE__*/_jsx(PostFeed,{posts:posts});}return/*#__PURE__*/_jsx(\"div\",{className:\"feed\",children:/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-12\",children:[/*#__PURE__*/_jsx(PostForm,{}),postContent]})})})});}}]);return Posts;}(Component);var mapStateToProps=function mapStateToProps(state){return{post:state.post};};export default connect(mapStateToProps,{getPosts:getPosts})(Posts);","map":{"version":3,"sources":["Z:/DevArena/client/src/components/posts/Posts.js"],"names":["React","Component","connect","PostForm","PostFeed","Spinner","getPosts","Posts","props","post","posts","loading","postContent","mapStateToProps","state"],"mappings":"ohBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CAEA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CACA,OAASC,QAAT,KAAyB,2BAAzB,C,2FAEMC,CAAAA,K,mOACF,4BAAoB,CAChB,KAAKC,KAAL,CAAWF,QAAX,GACH,C,sBAED,iBAAS,sBACsB,KAAKE,KAAL,CAAWC,IADjC,CACGC,KADH,kBACGA,KADH,CACUC,OADV,kBACUA,OADV,CAEL,GAAIC,CAAAA,WAAJ,CAEA,GAAIF,KAAK,GAAK,IAAV,EAAkBC,OAAtB,CAA+B,CAC3BC,WAAW,cAAG,KAAC,OAAD,IAAd,CACH,CAFD,IAEO,CACHA,WAAW,cAAG,KAAC,QAAD,EAAU,KAAK,CAAEF,KAAjB,EAAd,CACH,CAED,mBACI,YAAK,SAAS,CAAC,MAAf,uBACI,YAAK,SAAS,CAAC,WAAf,uBACI,YAAK,SAAS,CAAC,KAAf,uBACI,aAAK,SAAS,CAAC,WAAf,wBACI,KAAC,QAAD,IADJ,CAEKE,WAFL,GADJ,EADJ,EADJ,EADJ,CAYH,C,mBA3BeX,S,EAmCpB,GAAMY,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,QAAK,CAC9BL,IAAI,CAAEK,KAAK,CAACL,IADkB,CAAL,EAA7B,CAIA,cAAeP,CAAAA,OAAO,CAClBW,eADkB,CAElB,CAAEP,QAAQ,CAARA,QAAF,CAFkB,CAAP,CAGbC,KAHa,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport PostForm from './PostForm';\r\nimport PostFeed from './PostFeed';\r\nimport Spinner from '../common/Spinner';\r\nimport { getPosts } from '../../actions/postActions';\r\n\r\nclass Posts extends Component {\r\n    componentDidMount() {\r\n        this.props.getPosts();\r\n    }\r\n\r\n    render() {\r\n        const { posts, loading } = this.props.post;\r\n        let postContent;\r\n\r\n        if (posts === null || loading) {\r\n            postContent = <Spinner />;\r\n        } else {\r\n            postContent = <PostFeed posts={posts} />;\r\n        }\r\n\r\n        return (\r\n            <div className=\"feed\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <PostForm />\r\n                            {postContent}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nPosts.propTypes = {\r\n    getPosts: PropTypes.func.isRequired,\r\n    post: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    post: state.post\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { getPosts }\r\n)(Posts);\r\n"]},"metadata":{},"sourceType":"module"}