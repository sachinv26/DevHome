{"ast":null,"code":"import _classCallCheck from \"Z:/DevArena/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"Z:/DevArena/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"Z:/DevArena/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"Z:/DevArena/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"Z:\\\\DevArena\\\\client\\\\src\\\\components\\\\post\\\\CommentFeed.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport CommentItem from './CommentItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar CommentFeed = /*#__PURE__*/function (_Component) {\n  _inherits(CommentFeed, _Component);\n\n  var _super = _createSuper(CommentFeed);\n\n  function CommentFeed() {\n    _classCallCheck(this, CommentFeed);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(CommentFeed, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props = this.props,\n          comments = _this$props.comments,\n          postId = _this$props.postId;\n      return comments.map(function (comment) {\n        return /*#__PURE__*/_jsxDEV(CommentItem, {\n          comment: comment,\n          postId: postId\n        }, comment._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 13\n        }, _this);\n      });\n    }\n  }]);\n\n  return CommentFeed;\n}(Component);\n\nCommentFeed.propTypes = {\n  comments: PropTypes.array.isRequired,\n  postId: PropTypes.string.isRequired\n};\nexport default CommentFeed;","map":{"version":3,"sources":["Z:/DevArena/client/src/components/post/CommentFeed.js"],"names":["React","Component","PropTypes","CommentItem","CommentFeed","props","comments","postId","map","comment","_id","propTypes","array","isRequired","string"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;IAEMC,W;;;;;;;;;;;;;WACF,kBAAS;AAAA;;AAAA,wBACwB,KAAKC,KAD7B;AAAA,UACGC,QADH,eACGA,QADH;AAAA,UACaC,MADb,eACaA,MADb;AAGL,aAAOD,QAAQ,CAACE,GAAT,CAAa,UAAAC,OAAO;AAAA,4BACvB,QAAC,WAAD;AAA+B,UAAA,OAAO,EAAEA,OAAxC;AAAiD,UAAA,MAAM,EAAEF;AAAzD,WAAkBE,OAAO,CAACC,GAA1B;AAAA;AAAA;AAAA;AAAA,iBADuB;AAAA,OAApB,CAAP;AAGH;;;;EAPqBT,S;;AAU1BG,WAAW,CAACO,SAAZ,GAAwB;AACpBL,EAAAA,QAAQ,EAAEJ,SAAS,CAACU,KAAV,CAAgBC,UADN;AAEpBN,EAAAA,MAAM,EAAEL,SAAS,CAACY,MAAV,CAAiBD;AAFL,CAAxB;AAKA,eAAeT,WAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport CommentItem from './CommentItem';\r\n\r\nclass CommentFeed extends Component {\r\n    render() {\r\n        const { comments, postId } = this.props;\r\n\r\n        return comments.map(comment => (\r\n            <CommentItem key={comment._id} comment={comment} postId={postId} />\r\n        ));\r\n    }\r\n}\r\n\r\nCommentFeed.propTypes = {\r\n    comments: PropTypes.array.isRequired,\r\n    postId: PropTypes.string.isRequired\r\n};\r\n\r\nexport default CommentFeed;\r\n"]},"metadata":{},"sourceType":"module"}