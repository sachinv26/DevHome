{"ast":null,"code":"import _classCallCheck from \"Z:/DevArena/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"Z:/DevArena/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"Z:/DevArena/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"Z:/DevArena/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"Z:\\\\DevArena\\\\client\\\\src\\\\components\\\\post\\\\CommentForm.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport TextAreaFieldGroup from '../common/TextAreaFieldGroup';\nimport { addComment } from '../../actions/postActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar CommentForm = /*#__PURE__*/function (_Component) {\n  _inherits(CommentForm, _Component);\n\n  var _super = _createSuper(CommentForm);\n\n  function CommentForm(props) {\n    var _this;\n\n    _classCallCheck(this, CommentForm);\n\n    _this = _super.call(this, props);\n\n    _this.onSubmit = function (e) {\n      e.preventDefault();\n      var user = _this.props.auth.user;\n      var postId = _this.props.postId;\n      var newComment = {\n        text: _this.state.text,\n        name: user.name,\n        avatar: user.avatar\n      };\n\n      _this.props.addComment(postId, newComment);\n\n      _this.setState({\n        text: ''\n      });\n    };\n\n    _this.onChange = function (e) {\n      _this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    _this.state = {\n      text: '',\n      errors: {}\n    };\n    return _this;\n  }\n\n  _createClass(CommentForm, [{\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(newProps) {\n      if (newProps.errors) {\n        this.setState({\n          errors: newProps.errors\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var errors = this.state.errors;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-form mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card card-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header bg-info text-white\",\n            children: \"Make a comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: this.onSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: /*#__PURE__*/_jsxDEV(TextAreaFieldGroup, {\n                  placeholder: \"Type a reply here...\",\n                  onChange: this.onChange,\n                  value: this.state.text,\n                  name: \"text\",\n                  error: errors.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-outline-success\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return CommentForm;\n}(Component);\n\nCommentForm.propTypes = {\n  addPost: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  postId: PropTypes.string.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth,\n    errors: state.errors\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addComment: addComment\n})(CommentForm);","map":{"version":3,"sources":["Z:/DevArena/client/src/components/post/CommentForm.js"],"names":["React","Component","PropTypes","connect","TextAreaFieldGroup","addComment","CommentForm","props","onSubmit","e","preventDefault","user","auth","postId","newComment","text","state","name","avatar","setState","onChange","target","value","errors","newProps","propTypes","addPost","func","isRequired","object","string","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport TextAreaFieldGroup from '../common/TextAreaFieldGroup';\r\nimport { addComment } from '../../actions/postActions';\r\n\r\nclass CommentForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            text: '',\r\n            errors: {}\r\n        };\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(newProps) {\r\n        if (newProps.errors) {\r\n            this.setState({ errors: newProps.errors });\r\n        }\r\n    }\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const { user } = this.props.auth;\r\n        const { postId } = this.props;\r\n\r\n        const newComment = {\r\n            text: this.state.text,\r\n            name: user.name,\r\n            avatar: user.avatar\r\n        };\r\n\r\n        this.props.addComment(postId, newComment);\r\n        this.setState({ text: '' });\r\n    };\r\n\r\n    onChange = e => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    };\r\n\r\n    render() {\r\n        const { errors } = this.state;\r\n\r\n        return (\r\n            <div className=\"post-form mb-3\">\r\n                <div className=\"card card-info\">\r\n                    <div className=\"card-header bg-info text-white\">Make a comment</div>\r\n                    <div className=\"card-body\">\r\n                        <form onSubmit={this.onSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <TextAreaFieldGroup\r\n                                    placeholder=\"Type a reply here...\"\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.text}\r\n                                    name=\"text\"\r\n                                    error={errors.text}\r\n                                />\r\n                            </div>\r\n                            <button type=\"submit\" className=\"btn btn-outline-success\">\r\n                                Submit\r\n                            </button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nCommentForm.propTypes = {\r\n    addPost: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    postId: PropTypes.string.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { addComment }\r\n)(CommentForm);\r\n"]},"metadata":{},"sourceType":"module"}