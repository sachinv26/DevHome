{"ast":null,"code":"import _toConsumableArray from \"Z:/DevArena/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"Z:/DevArena/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { ADD_POST, DELETE_POST, GET_POST, GET_POSTS, POST_LOADING } from '../actions/types';\nvar initialState = {\n  posts: [],\n  post: {},\n  loading: false\n};\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case POST_LOADING:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true\n      });\n\n    case GET_POSTS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        posts: action.payload,\n        loading: false\n      });\n\n    case GET_POST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        post: action.payload,\n        loading: false\n      });\n\n    case ADD_POST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        posts: [action.payload].concat(_toConsumableArray(state.posts))\n      });\n\n    case DELETE_POST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        posts: state.posts.filter(function (post) {\n          return post._id !== action.payload;\n        })\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["Z:/DevArena/client/src/reducers/postReducer.js"],"names":["ADD_POST","DELETE_POST","GET_POST","GET_POSTS","POST_LOADING","initialState","posts","post","loading","state","action","type","payload","filter","_id"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,QAAhC,EAA0CC,SAA1C,EAAqDC,YAArD,QAAyE,kBAAzE;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,IAAI,EAAE,EAFW;AAGjBC,EAAAA,OAAO,EAAE;AAHQ,CAArB;AAMA,eAAe,YAAwC;AAAA,MAA9BC,KAA8B,uEAAtBJ,YAAsB;AAAA,MAARK,MAAQ;;AACnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,YAAL;AACI,6CACOK,KADP;AAEID,QAAAA,OAAO,EAAE;AAFb;;AAIJ,SAAKL,SAAL;AACI,6CACOM,KADP;AAEIH,QAAAA,KAAK,EAAEI,MAAM,CAACE,OAFlB;AAGIJ,QAAAA,OAAO,EAAE;AAHb;;AAKJ,SAAKN,QAAL;AACI,6CACOO,KADP;AAEIF,QAAAA,IAAI,EAAEG,MAAM,CAACE,OAFjB;AAGIJ,QAAAA,OAAO,EAAE;AAHb;;AAKJ,SAAKR,QAAL;AACI,6CACOS,KADP;AAEIH,QAAAA,KAAK,GAAGI,MAAM,CAACE,OAAV,4BAAsBH,KAAK,CAACH,KAA5B;AAFT;;AAIJ,SAAKL,WAAL;AACI,6CACOQ,KADP;AAEIH,QAAAA,KAAK,EAAEG,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmB,UAAAN,IAAI;AAAA,iBAAIA,IAAI,CAACO,GAAL,KAAaJ,MAAM,CAACE,OAAxB;AAAA,SAAvB;AAFX;;AAIJ;AACI,aAAOH,KAAP;AA7BR;AA+BH","sourcesContent":["import { ADD_POST, DELETE_POST, GET_POST, GET_POSTS, POST_LOADING } from '../actions/types';\r\n\r\nconst initialState = {\r\n    posts: [],\r\n    post: {},\r\n    loading: false\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case POST_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case GET_POSTS:\r\n            return {\r\n                ...state,\r\n                posts: action.payload,\r\n                loading: false\r\n            };\r\n        case GET_POST:\r\n            return {\r\n                ...state,\r\n                post: action.payload,\r\n                loading: false\r\n            };\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                posts: [action.payload, ...state.posts]\r\n            };\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(post => post._id !== action.payload)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}