{"ast":null,"code":"import _classCallCheck from \"Z:/DevArena/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"Z:/DevArena/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"Z:/DevArena/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"Z:/DevArena/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"Z:\\\\DevArena\\\\client\\\\src\\\\components\\\\profile\\\\Profile.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport ProfileHeader from './ProfileHeader';\nimport ProfileAbout from './ProfileAbout';\nimport ProfileCreds from './ProfileCreds';\nimport ProfileGithub from './ProfileGithub';\nimport Spinner from '../common/Spinner';\nimport { getProfileByHandle } from '../../actions/profileActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Profile = /*#__PURE__*/function (_Component) {\n  _inherits(Profile, _Component);\n\n  var _super = _createSuper(Profile);\n\n  function Profile() {\n    _classCallCheck(this, Profile);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Profile, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.match.params.handle) {\n        this.props.getProfileByHandle(this.props.match.params.handle);\n      }\n    }\n  }, {\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      co;\n\n      if (nextProps.profile.profile === null && this.props.profile.loading) {\n        this.props.history.push('/not-found');\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$profile = this.props.profile,\n          profile = _this$props$profile.profile,\n          loading = _this$props$profile.loading;\n      var profileContent;\n\n      if (profile === null || loading) {\n        profileContent = /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 30\n        }, this);\n      } else {\n        profileContent = /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-6\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/profiles\",\n                className: \"btn btn-light mb-3 float-left\",\n                children: \"Back to Profiles\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(ProfileHeader, {\n            profile: profile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(ProfileAbout, {\n            profile: profile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(ProfileCreds, {\n            education: profile.education,\n            experience: profile.experience\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, this), profile.githubusername ? /*#__PURE__*/_jsxDEV(ProfileGithub, {\n            username: profile.githubusername\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-12\",\n              children: profileContent\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return Profile;\n}(Component);\n\nProfile.propTypes = {\n  profile: PropTypes.object.isRequired,\n  getProfileByHandle: PropTypes.func.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    profile: state.profile\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getProfileByHandle: getProfileByHandle\n})(Profile);","map":{"version":3,"sources":["Z:/DevArena/client/src/components/profile/Profile.js"],"names":["React","Component","connect","PropTypes","Link","ProfileHeader","ProfileAbout","ProfileCreds","ProfileGithub","Spinner","getProfileByHandle","Profile","props","match","params","handle","nextProps","co","profile","loading","history","push","profileContent","education","experience","githubusername","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport ProfileHeader from './ProfileHeader';\r\nimport ProfileAbout from './ProfileAbout';\r\nimport ProfileCreds from './ProfileCreds';\r\nimport ProfileGithub from './ProfileGithub';\r\nimport Spinner from '../common/Spinner';\r\nimport { getProfileByHandle } from '../../actions/profileActions';\r\n\r\nclass Profile extends Component {\r\n    componentDidMount() {\r\n        if (this.props.match.params.handle) {\r\n            this.props.getProfileByHandle(this.props.match.params.handle);\r\n        }\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(nextProps) {\r\n        co\r\n        if (nextProps.profile.profile === null && this.props.profile.loading) {\r\n            this.props.history.push('/not-found');\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { profile, loading } = this.props.profile;\r\n        let profileContent;\r\n\r\n        if (profile === null || loading) {\r\n            profileContent = <Spinner />;\r\n        } else {\r\n            profileContent = (\r\n                <div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <Link to=\"/profiles\" className=\"btn btn-light mb-3 float-left\">\r\n                                Back to Profiles\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\"col-md-6\" />\r\n                    </div>\r\n                    <ProfileHeader profile={profile} />\r\n                    <ProfileAbout profile={profile} />\r\n                    <ProfileCreds\r\n                        education={profile.education}\r\n                        experience={profile.experience}\r\n                    />\r\n                    {profile.githubusername ? (\r\n                        <ProfileGithub username={profile.githubusername} />\r\n                    ) : null}\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className=\"profile\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">{profileContent}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nProfile.propTypes = {\r\n    profile: PropTypes.object.isRequired,\r\n    getProfileByHandle: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { getProfileByHandle }\r\n)(Profile);\r\n"]},"metadata":{},"sourceType":"module"}