{"ast":null,"code":"var _jsxFileName = \"Z:\\\\DevArena\\\\client\\\\src\\\\components\\\\common\\\\SelectListGroup.js\",\n    _this = this;\n\nimport React from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types'; // Pass properties in the functional (stateless) component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar SelectListGroup = function SelectListGroup(_ref) {\n  var name = _ref.name,\n      value = _ref.value,\n      error = _ref.error,\n      info = _ref.info,\n      onChange = _ref.onChange,\n      options = _ref.options;\n  var selectOptions = options.map(function (option) {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: option.value,\n      children: option.label\n    }, option.label, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, _this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-group\",\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      className: classnames('form-control form-control-lg', {\n        'is-invalid': error\n      }),\n      value: value,\n      onChange: onChange,\n      name: name,\n      children: selectOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, _this), info && /*#__PURE__*/_jsxDEV(\"small\", {\n      className: \"form-text text-muted\",\n      children: info\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 22\n    }, _this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invalid-feedback\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 23\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, _this);\n};\n\n_c = SelectListGroup;\nSelectListGroup.propTypes = {\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  info: PropTypes.string,\n  error: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n  options: PropTypes.array.isRequired\n};\nexport default SelectListGroup;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectListGroup\");","map":{"version":3,"sources":["Z:/DevArena/client/src/components/common/SelectListGroup.js"],"names":["React","classnames","PropTypes","SelectListGroup","name","value","error","info","onChange","options","selectOptions","map","option","label","propTypes","string","isRequired","func","array"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;;;AACA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,OAAqD;AAAA,MAAlDC,IAAkD,QAAlDA,IAAkD;AAAA,MAA5CC,KAA4C,QAA5CA,KAA4C;AAAA,MAArCC,KAAqC,QAArCA,KAAqC;AAAA,MAA9BC,IAA8B,QAA9BA,IAA8B;AAAA,MAAxBC,QAAwB,QAAxBA,QAAwB;AAAA,MAAdC,OAAc,QAAdA,OAAc;AACzE,MAAMC,aAAa,GAAGD,OAAO,CAACE,GAAR,CAAY,UAAAC,MAAM;AAAA,wBACpC;AAA2B,MAAA,KAAK,EAAEA,MAAM,CAACP,KAAzC;AAAA,gBACKO,MAAM,CAACC;AADZ,OAAaD,MAAM,CAACC,KAApB;AAAA;AAAA;AAAA;AAAA,aADoC;AAAA,GAAlB,CAAtB;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACI;AACI,MAAA,SAAS,EAAEZ,UAAU,CAAC,8BAAD,EAAiC;AAClD,sBAAcK;AADoC,OAAjC,CADzB;AAII,MAAA,KAAK,EAAED,KAJX;AAKI,MAAA,QAAQ,EAAEG,QALd;AAMI,MAAA,IAAI,EAAEJ,IANV;AAAA,gBAQKM;AARL;AAAA;AAAA;AAAA;AAAA,aADJ,EAWKH,IAAI,iBAAI;AAAO,MAAA,SAAS,EAAC,sBAAjB;AAAA,gBAAyCA;AAAzC;AAAA;AAAA;AAAA;AAAA,aAXb,EAYKD,KAAK,iBAAI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,gBAAmCA;AAAnC;AAAA;AAAA;AAAA;AAAA,aAZd;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAgBH,CAvBD;;KAAMH,e;AAyBNA,eAAe,CAACW,SAAhB,GAA4B;AACxBV,EAAAA,IAAI,EAAEF,SAAS,CAACa,MAAV,CAAiBC,UADC;AAExBX,EAAAA,KAAK,EAAEH,SAAS,CAACa,MAAV,CAAiBC,UAFA;AAGxBT,EAAAA,IAAI,EAAEL,SAAS,CAACa,MAHQ;AAIxBT,EAAAA,KAAK,EAAEJ,SAAS,CAACa,MAJO;AAKxBP,EAAAA,QAAQ,EAAEN,SAAS,CAACe,IAAV,CAAeD,UALD;AAMxBP,EAAAA,OAAO,EAAEP,SAAS,CAACgB,KAAV,CAAgBF;AAND,CAA5B;AASA,eAAeb,eAAf","sourcesContent":["import React from 'react';\r\nimport classnames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\n\r\n// Pass properties in the functional (stateless) component\r\nconst SelectListGroup = ({ name, value, error, info, onChange, options }) => {\r\n    const selectOptions = options.map(option => (\r\n        <option key={option.label} value={option.value}>\r\n            {option.label}\r\n        </option>\r\n    ));\r\n\r\n    return (\r\n        <div className=\"form-group\">\r\n            <select\r\n                className={classnames('form-control form-control-lg', {\r\n                    'is-invalid': error\r\n                })}\r\n                value={value}\r\n                onChange={onChange}\r\n                name={name}\r\n            >\r\n                {selectOptions}\r\n            </select>\r\n            {info && <small className=\"form-text text-muted\">{info}</small>}\r\n            {error && <div className=\"invalid-feedback\">{error}</div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nSelectListGroup.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    info: PropTypes.string,\r\n    error: PropTypes.string,\r\n    onChange: PropTypes.func.isRequired,\r\n    options: PropTypes.array.isRequired\r\n};\r\n\r\nexport default SelectListGroup;\r\n"]},"metadata":{},"sourceType":"module"}