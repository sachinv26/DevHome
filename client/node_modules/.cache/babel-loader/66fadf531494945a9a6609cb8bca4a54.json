{"ast":null,"code":"import _classCallCheck from \"Z:/DevArena/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"Z:/DevArena/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"Z:/DevArena/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"Z:/DevArena/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"Z:\\\\DevArena\\\\client\\\\src\\\\components\\\\profile\\\\ProfileGithub.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar ProfileGithub = /*#__PURE__*/function (_Component) {\n  _inherits(ProfileGithub, _Component);\n\n  var _super = _createSuper(ProfileGithub);\n\n  function ProfileGithub(props) {\n    var _this;\n\n    _classCallCheck(this, ProfileGithub);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      clientId: '0926cb66fe95890521bc',\n      clientSecret: '2ce67c1872105d847a2eff61aeb9c2c928e0e376',\n      count: 5,\n      sort: 'created: asc',\n      repos: []\n    };\n    return _this;\n  }\n\n  _createClass(ProfileGithub, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var username = this.props.username;\n      var _this$state = this.state,\n          count = _this$state.count,\n          sort = _this$state.sort,\n          clientId = _this$state.clientId,\n          clientSecret = _this$state.clientSecret;\n      fetch(\"https://api.github.com/users/\".concat(username, \"/repos?per_page=\").concat(count, \"&sort=\").concat(sort, \"&client_id=\").concat(clientId, \"&client_secret=\").concat(clientSecret)).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        if (_this2.refs.myRef) {\n          _this2.setState({\n            repos: data\n          });\n        }\n      }).catch(function (error) {\n        return console.log(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var repos = this.state.repos;\n      var repoItems = repos.map(function (repo) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card card-body mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: repo.html_url,\n                  className: \"text-info\",\n                  target: \"_blank\",\n                  rel: \"noopener noreferrer\",\n                  children: repo.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 40,\n                  columnNumber: 29\n                }, _this3)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 25\n              }, _this3), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: repo.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 25\n              }, _this3)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 21\n            }, _this3), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"badge badge-info mr-1\",\n                children: [\"Stars: \", repo.stargazers_count]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 25\n              }, _this3), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"badge badge-secondary mr-1\",\n                children: [\"Watchers: \", repo.watchers_count]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 25\n              }, _this3), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"badge badge-success\",\n                children: [\"Forks: \", repo.forks_count]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 25\n              }, _this3)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 21\n            }, _this3)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }, _this3)\n        }, repo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, _this3);\n      });\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: \"myRef\",\n        children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"mb-4\",\n          children: \"Latest Github Repos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this), repoItems]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return ProfileGithub;\n}(Component);\n\nProfileGithub.propTypes = {\n  username: PropTypes.string.isRequired\n};\nexport default ProfileGithub;","map":{"version":3,"sources":["Z:/DevArena/client/src/components/profile/ProfileGithub.js"],"names":["React","Component","PropTypes","ProfileGithub","props","state","clientId","clientSecret","count","sort","repos","username","fetch","then","res","json","data","refs","myRef","setState","catch","error","console","log","repoItems","map","repo","html_url","name","description","stargazers_count","watchers_count","forks_count","id","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ProfileGithub extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            clientId: '0926cb66fe95890521bc',\r\n            clientSecret: '2ce67c1872105d847a2eff61aeb9c2c928e0e376',\r\n            count: 5,\r\n            sort: 'created: asc',\r\n            repos: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { username } = this.props;\r\n        const { count, sort, clientId, clientSecret } = this.state;\r\n\r\n        fetch(\r\n            `https://api.github.com/users/${username}/repos?per_page=${count}&sort=${sort}&client_id=${clientId}&client_secret=${clientSecret}`\r\n        )\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                if (this.refs.myRef) {\r\n                    this.setState({ repos: data });\r\n                }\r\n            })\r\n            .catch(error => console.log(error));\r\n    }\r\n\r\n    render() {\r\n        const { repos } = this.state;\r\n\r\n        const repoItems = repos.map(repo => (\r\n            <div key={repo.id} className=\"card card-body mb-2\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                        <h4>\r\n                            <a href={repo.html_url} className=\"text-info\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                {repo.name}\r\n                            </a>\r\n                        </h4>\r\n                        <p>{repo.description}</p>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <span className=\"badge badge-info mr-1\">\r\n                            Stars: {repo.stargazers_count}\r\n                        </span>\r\n                        <span className=\"badge badge-secondary mr-1\">\r\n                            Watchers: {repo.watchers_count}\r\n                        </span>\r\n                        <span className=\"badge badge-success\">\r\n                            Forks: {repo.forks_count}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ));\r\n\r\n        return (\r\n            <div ref=\"myRef\">\r\n                <hr />\r\n                <h3 className=\"mb-4\">Latest Github Repos</h3>\r\n                {repoItems}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nProfileGithub.propTypes = {\r\n    username: PropTypes.string.isRequired\r\n};\r\n\r\nexport default ProfileGithub;\r\n"]},"metadata":{},"sourceType":"module"}