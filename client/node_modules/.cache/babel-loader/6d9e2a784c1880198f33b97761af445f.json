{"ast":null,"code":"var _jsxFileName = \"Z:\\\\DevArena\\\\client\\\\src\\\\components\\\\common\\\\TextAreaFieldGroup.js\",\n    _this = this;\n\nimport React from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types'; // Pass properties in the functional (stateless) component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar TextAreaFieldGroup = function TextAreaFieldGroup(_ref) {\n  var name = _ref.name,\n      placeholder = _ref.placeholder,\n      value = _ref.value,\n      error = _ref.error,\n      info = _ref.info,\n      onChange = _ref.onChange;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-group\",\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: classnames('form-control form-control-lg', {\n        'is-invalid': error\n      }),\n      placeholder: placeholder,\n      value: value,\n      onChange: onChange,\n      name: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, _this), info && /*#__PURE__*/_jsxDEV(\"small\", {\n      className: \"form-text text-muted\",\n      children: info\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 22\n    }, _this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invalid-feedback\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 23\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, _this);\n};\n\n_c = TextAreaFieldGroup;\nTextAreaFieldGroup.propTypes = {\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  value: PropTypes.string.isRequired,\n  info: PropTypes.string,\n  error: PropTypes.string,\n  onChange: PropTypes.func.isRequired\n};\nexport default TextAreaFieldGroup;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextAreaFieldGroup\");","map":{"version":3,"sources":["Z:/DevArena/client/src/components/common/TextAreaFieldGroup.js"],"names":["React","classnames","PropTypes","TextAreaFieldGroup","name","placeholder","value","error","info","onChange","propTypes","string","isRequired","func"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;;;AACA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,OAOrB;AAAA,MANFC,IAME,QANFA,IAME;AAAA,MALFC,WAKE,QALFA,WAKE;AAAA,MAJFC,KAIE,QAJFA,KAIE;AAAA,MAHFC,KAGE,QAHFA,KAGE;AAAA,MAFFC,IAEE,QAFFA,IAEE;AAAA,MADFC,QACE,QADFA,QACE;AACF,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACI;AACI,MAAA,SAAS,EAAER,UAAU,CAAC,8BAAD,EAAiC;AAClD,sBAAcM;AADoC,OAAjC,CADzB;AAII,MAAA,WAAW,EAAEF,WAJjB;AAKI,MAAA,KAAK,EAAEC,KALX;AAMI,MAAA,QAAQ,EAAEG,QANd;AAOI,MAAA,IAAI,EAAEL;AAPV;AAAA;AAAA;AAAA;AAAA,aADJ,EAUKI,IAAI,iBAAI;AAAO,MAAA,SAAS,EAAC,sBAAjB;AAAA,gBAAyCA;AAAzC;AAAA;AAAA;AAAA;AAAA,aAVb,EAWKD,KAAK,iBAAI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,gBAAmCA;AAAnC;AAAA;AAAA;AAAA;AAAA,aAXd;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAeH,CAvBD;;KAAMJ,kB;AAyBNA,kBAAkB,CAACO,SAAnB,GAA+B;AAC3BN,EAAAA,IAAI,EAAEF,SAAS,CAACS,MAAV,CAAiBC,UADI;AAE3BP,EAAAA,WAAW,EAAEH,SAAS,CAACS,MAFI;AAG3BL,EAAAA,KAAK,EAAEJ,SAAS,CAACS,MAAV,CAAiBC,UAHG;AAI3BJ,EAAAA,IAAI,EAAEN,SAAS,CAACS,MAJW;AAK3BJ,EAAAA,KAAK,EAAEL,SAAS,CAACS,MALU;AAM3BF,EAAAA,QAAQ,EAAEP,SAAS,CAACW,IAAV,CAAeD;AANE,CAA/B;AASA,eAAeT,kBAAf","sourcesContent":["import React from 'react';\r\nimport classnames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\n\r\n// Pass properties in the functional (stateless) component\r\nconst TextAreaFieldGroup = ({\r\n    name,\r\n    placeholder,\r\n    value,\r\n    error,\r\n    info,\r\n    onChange\r\n}) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <textarea\r\n                className={classnames('form-control form-control-lg', {\r\n                    'is-invalid': error\r\n                })}\r\n                placeholder={placeholder}\r\n                value={value}\r\n                onChange={onChange}\r\n                name={name}\r\n            />\r\n            {info && <small className=\"form-text text-muted\">{info}</small>}\r\n            {error && <div className=\"invalid-feedback\">{error}</div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nTextAreaFieldGroup.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string,\r\n    value: PropTypes.string.isRequired,\r\n    info: PropTypes.string,\r\n    error: PropTypes.string,\r\n    onChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default TextAreaFieldGroup;\r\n"]},"metadata":{},"sourceType":"module"}