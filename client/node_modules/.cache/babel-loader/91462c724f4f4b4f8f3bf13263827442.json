{"ast":null,"code":"import _classCallCheck from \"Z:/DevArena/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"Z:/DevArena/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"Z:/DevArena/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"Z:/DevArena/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"Z:/DevArena/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"Z:\\\\DevArena\\\\client\\\\src\\\\components\\\\auth\\\\Register.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { registerUser } from '../../actions/authActions';\nimport TextFieldGroup from '../common/TextFieldGroup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Register = /*#__PURE__*/function (_Component) {\n  _inherits(Register, _Component);\n\n  var _super = _createSuper(Register);\n\n  function Register() {\n    var _this;\n\n    _classCallCheck(this, Register);\n\n    _this = _super.call(this);\n    _this.state = {\n      name: '',\n      email: '',\n      password: '',\n      password2: '',\n      errors: {}\n    }; // This is to bind the onChange listener function with the 'this' of the state (We don't need these if we use arrow functions like in Login component)\n\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_this));\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Register, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.auth.isAuthenticated) {\n        this.props.history.push('/dashboard');\n      }\n    } // If we receive new error props we are going to put them in the component state\n\n  }, {\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      if (nextProps.errors) {\n        this.setState({\n          errors: nextProps.errors\n        });\n      }\n    } // We need this for 2 way binding\n\n  }, {\n    key: \"onChange\",\n    value: function onChange(e) {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(e) {\n      e.preventDefault();\n      var newUser = {\n        name: this.state.name,\n        email: this.state.email,\n        password: this.state.password,\n        password2: this.state.password2\n      };\n      this.props.registerUser(newUser, this.props.history);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var errors = this.state.errors;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-8 m-auto\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"display-5 text-center\",\n                children: \"Sign Up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"lead text-center\",\n                children: \"Create your DevArena account\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                noValidate: true,\n                onSubmit: this.onSubmit\n                /* Avoid the native html5 validation for email */\n                ,\n                children: [/*#__PURE__*/_jsxDEV(TextFieldGroup, {\n                  placeholder: \"Name\",\n                  onChange: this.onChange,\n                  error: errors.name,\n                  value: this.state.name,\n                  name: \"name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(TextFieldGroup, {\n                  placeholder: \"Email Address\",\n                  type: \"email\",\n                  onChange: this.onChange,\n                  error: errors.email,\n                  value: this.state.email,\n                  name: \"email\",\n                  info: \"This site uses Gravatar so if you want a profile image, use a Gravatar email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(TextFieldGroup, {\n                  placeholder: \"Password\",\n                  type: \"password\",\n                  onChange: this.onChange,\n                  error: errors.password,\n                  value: this.state.password,\n                  name: \"password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(TextFieldGroup, {\n                  placeholder: \"Confirm Password\",\n                  type: \"password\",\n                  onChange: this.onChange,\n                  error: errors.password2,\n                  value: this.state.password2,\n                  name: \"password2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"submit\",\n                  className: \"btn btn-primary btn-lg btn-block\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return Register;\n}(Component);\n\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n}; // The parenthesis are used in place of having a return statement\n// When updates in the Redux store happen, map them to this component's props\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth,\n    //The state.auth comes from the index.js of the reducers\n    errors: state.errors\n  };\n};\n\nexport default connect(mapStateToProps, {\n  registerUser: registerUser\n})(withRouter(Register));","map":{"version":3,"sources":["Z:/DevArena/client/src/components/auth/Register.js"],"names":["React","Component","PropTypes","withRouter","connect","registerUser","TextFieldGroup","Register","state","name","email","password","password2","errors","onChange","bind","onSubmit","props","auth","isAuthenticated","history","push","nextProps","setState","e","target","value","preventDefault","newUser","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { registerUser } from '../../actions/authActions';\r\nimport TextFieldGroup from '../common/TextFieldGroup';\r\n\r\nclass Register extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            name: '',\r\n            email: '',\r\n            password: '',\r\n            password2: '',\r\n            errors: {}\r\n        };\r\n\r\n        // This is to bind the onChange listener function with the 'this' of the state (We don't need these if we use arrow functions like in Login component)\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.auth.isAuthenticated) {\r\n            this.props.history.push('/dashboard');\r\n        }\r\n    }\r\n\r\n    // If we receive new error props we are going to put them in the component state\r\n    UNSAFE_componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n            this.setState({ errors: nextProps.errors });\r\n        }\r\n    }\r\n\r\n    // We need this for 2 way binding\r\n    onChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        const newUser = {\r\n            name: this.state.name,\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            password2: this.state.password2\r\n        };\r\n\r\n        this.props.registerUser(newUser, this.props.history);\r\n    }\r\n\r\n    render() {\r\n        const { errors } = this.state;\r\n\r\n        return (\r\n            <div className=\"register\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <h1 className=\"display-5 text-center\">Sign Up</h1>\r\n                            <p className=\"lead text-center\">\r\n                                Create your DevArena account\r\n                            </p>\r\n                            <form\r\n                                noValidate\r\n                                onSubmit={\r\n                                    this.onSubmit\r\n                                } /* Avoid the native html5 validation for email */\r\n                            >\r\n                                <TextFieldGroup\r\n                                    placeholder=\"Name\"\r\n                                    onChange={this.onChange}\r\n                                    error={errors.name}\r\n                                    value={this.state.name}\r\n                                    name=\"name\"\r\n                                />\r\n                                <TextFieldGroup\r\n                                    placeholder=\"Email Address\"\r\n                                    type=\"email\"\r\n                                    onChange={this.onChange}\r\n                                    error={errors.email}\r\n                                    value={this.state.email}\r\n                                    name=\"email\"\r\n                                    info=\"This site uses Gravatar so if you want a profile image, use a Gravatar email\"\r\n                                />\r\n                                <TextFieldGroup\r\n                                    placeholder=\"Password\"\r\n                                    type=\"password\"\r\n                                    onChange={this.onChange}\r\n                                    error={errors.password}\r\n                                    value={this.state.password}\r\n                                    name=\"password\"\r\n                                />\r\n                                <TextFieldGroup\r\n                                    placeholder=\"Confirm Password\"\r\n                                    type=\"password\"\r\n                                    onChange={this.onChange}\r\n                                    error={errors.password2}\r\n                                    value={this.state.password2}\r\n                                    name=\"password2\"\r\n                                />\r\n                                <input type=\"submit\" className=\"btn btn-primary btn-lg btn-block\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nRegister.propTypes = {\r\n    registerUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\n// The parenthesis are used in place of having a return statement\r\n// When updates in the Redux store happen, map them to this component's props\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth, //The state.auth comes from the index.js of the reducers\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { registerUser }\r\n)(withRouter(Register));\r\n"]},"metadata":{},"sourceType":"module"}