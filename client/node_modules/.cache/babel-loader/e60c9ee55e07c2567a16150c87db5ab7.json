{"ast":null,"code":"import axios from 'axios';\nimport { ADD_POST, CLEAR_ERRORS, DELETE_POST, GET_ERRORS, GET_POST, GET_POSTS, POST_LOADING } from './types'; // Add Posts\n\nexport var addPost = function addPost(postData) {\n  return function (dispatch) {\n    dispatch(clearErrors());\n    axios.post('/api/posts', postData).then(function (res) {\n      return dispatch({\n        type: ADD_POST,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // Get Posts\n\nexport var getPosts = function getPosts() {\n  return function (dispatch) {\n    dispatch(setPostLoading());\n    axios.get('/api/posts').then(function (res) {\n      return dispatch({\n        type: GET_POSTS,\n        payload: res.data\n      });\n    }).catch(function () {\n      return dispatch({\n        type: GET_POSTS,\n        payload: null\n      });\n    });\n  };\n}; // Get Post\n\nexport var getPost = function getPost(id) {\n  return function (dispatch) {\n    dispatch(setPostLoading());\n    axios.get(\"/api/posts/\".concat(id)).then(function (res) {\n      return dispatch({\n        type: GET_POST,\n        payload: res.data\n      });\n    }).catch(function () {\n      return dispatch({\n        type: GET_POST,\n        payload: null\n      });\n    });\n  };\n}; // Delete Post\n\nexport var deletePost = function deletePost(id) {\n  return function (dispatch) {\n    axios.delete(\"/api/posts/\".concat(id)).then(function () {\n      return dispatch({\n        type: DELETE_POST,\n        payload: id\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; //Add Like\n\nexport var addLike = function addLike(id) {\n  return function (dispatch) {\n    axios.post(\"/api/posts/like/\".concat(id)).then(function () {\n      return dispatch(getPosts());\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; //Remove Like\n\nexport var removeLike = function removeLike(id) {\n  return function (dispatch) {\n    axios.post(\"/api/posts/unlike/\".concat(id)).then(function () {\n      return dispatch(getPosts());\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // Add Comment\n\nexport var addComment = function addComment(postId, commentData) {\n  return function (dispatch) {\n    dispatch(clearErrors());\n    axios.post(\"/api/posts/comment/\".concat(postId), commentData).then(function (res) {\n      return dispatch({\n        type: GET_POST,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // Delete Comment\n\nexport var deleteComment = function deleteComment(postId, commentId) {\n  return function (dispatch) {\n    axios.delete(\"/api/posts/comment/\".concat(postId, \"/\").concat(commentId)).then(function (res) {\n      return dispatch({\n        type: GET_POST,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // Set loading state\n\nexport var setPostLoading = function setPostLoading() {\n  return {\n    type: POST_LOADING\n  };\n}; // Clear Errors\n\nexport var clearErrors = function clearErrors() {\n  return {\n    type: CLEAR_ERRORS\n  };\n};","map":{"version":3,"sources":["Z:/DevArena/client/src/actions/postActions.js"],"names":["axios","ADD_POST","CLEAR_ERRORS","DELETE_POST","GET_ERRORS","GET_POST","GET_POSTS","POST_LOADING","addPost","postData","dispatch","clearErrors","post","then","res","type","payload","data","catch","err","response","getPosts","setPostLoading","get","getPost","id","deletePost","delete","addLike","removeLike","addComment","postId","commentData","deleteComment","commentId"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { ADD_POST, CLEAR_ERRORS, DELETE_POST, GET_ERRORS, GET_POST, GET_POSTS, POST_LOADING } from './types';\r\n\r\n// Add Posts\r\nexport const addPost = postData => dispatch => {\r\n    dispatch(clearErrors());\r\n\r\n    axios\r\n        .post('/api/posts', postData)\r\n        .then(res =>\r\n            dispatch({\r\n                type: ADD_POST,\r\n                payload: res.data\r\n            })\r\n        )\r\n        .catch(err =>\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        );\r\n};\r\n\r\n// Get Posts\r\nexport const getPosts = () => dispatch => {\r\n    dispatch(setPostLoading());\r\n\r\n    axios\r\n        .get('/api/posts')\r\n        .then(res =>\r\n            dispatch({\r\n                type: GET_POSTS,\r\n                payload: res.data\r\n            })\r\n        )\r\n        .catch(() =>\r\n            dispatch({\r\n                type: GET_POSTS,\r\n                payload: null\r\n            })\r\n        );\r\n};\r\n\r\n// Get Post\r\nexport const getPost = id => dispatch => {\r\n    dispatch(setPostLoading());\r\n\r\n    axios\r\n        .get(`/api/posts/${id}`)\r\n        .then(res =>\r\n            dispatch({\r\n                type: GET_POST,\r\n                payload: res.data\r\n            })\r\n        )\r\n        .catch(() =>\r\n            dispatch({\r\n                type: GET_POST,\r\n                payload: null\r\n            })\r\n        );\r\n};\r\n\r\n// Delete Post\r\nexport const deletePost = id => dispatch => {\r\n    axios\r\n        .delete(`/api/posts/${id}`)\r\n        .then(() =>\r\n            dispatch({\r\n                type: DELETE_POST,\r\n                payload: id\r\n            })\r\n        )\r\n        .catch(err =>\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        );\r\n};\r\n\r\n//Add Like\r\nexport const addLike = id => dispatch => {\r\n    axios\r\n        .post(`/api/posts/like/${id}`)\r\n        .then(() => dispatch(getPosts()))\r\n        .catch(err =>\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        );\r\n};\r\n\r\n//Remove Like\r\nexport const removeLike = id => dispatch => {\r\n    axios\r\n        .post(`/api/posts/unlike/${id}`)\r\n        .then(() => dispatch(getPosts()))\r\n        .catch(err =>\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        );\r\n};\r\n\r\n// Add Comment\r\nexport const addComment = (postId, commentData) => dispatch => {\r\n    dispatch(clearErrors());\r\n\r\n    axios\r\n        .post(`/api/posts/comment/${postId}`, commentData)\r\n        .then(res =>\r\n            dispatch({\r\n                type: GET_POST,\r\n                payload: res.data\r\n            })\r\n        )\r\n        .catch(err =>\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        );\r\n};\r\n\r\n// Delete Comment\r\nexport const deleteComment = (postId, commentId) => dispatch => {\r\n    axios\r\n        .delete(`/api/posts/comment/${postId}/${commentId}`)\r\n        .then(res =>\r\n            dispatch({\r\n                type: GET_POST,\r\n                payload: res.data\r\n            })\r\n        )\r\n        .catch(err =>\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        );\r\n};\r\n\r\n// Set loading state\r\nexport const setPostLoading = () => {\r\n    return {\r\n        type: POST_LOADING\r\n    };\r\n};\r\n\r\n// Clear Errors\r\nexport const clearErrors = () => {\r\n    return {\r\n        type: CLEAR_ERRORS\r\n    };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}