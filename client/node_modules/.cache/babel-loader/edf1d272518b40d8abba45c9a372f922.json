{"ast":null,"code":"import axios from'axios';import{ADD_POST,CLEAR_ERRORS,DELETE_POST,GET_ERRORS,GET_POST,GET_POSTS,POST_LOADING}from'./types';// Add Posts\nexport var addPost=function addPost(postData){return function(dispatch){dispatch(clearErrors());axios.post('/api/posts',postData).then(function(res){return dispatch({type:ADD_POST,payload:res.data});}).catch(function(err){return dispatch({type:GET_ERRORS,payload:err.response.data});});};};// Get Posts\nexport var getPosts=function getPosts(){return function(dispatch){dispatch(setPostLoading());axios.get('/api/posts').then(function(res){return dispatch({type:GET_POSTS,payload:res.data});}).catch(function(){return dispatch({type:GET_POSTS,payload:null});});};};// Get Post\nexport var getPost=function getPost(id){return function(dispatch){dispatch(setPostLoading());axios.get(\"/api/posts/\".concat(id)).then(function(res){return dispatch({type:GET_POST,payload:res.data});}).catch(function(){return dispatch({type:GET_POST,payload:null});});};};// Delete Post\nexport var deletePost=function deletePost(id){return function(dispatch){axios.delete(\"/api/posts/\".concat(id)).then(function(){return dispatch({type:DELETE_POST,payload:id});}).catch(function(err){return dispatch({type:GET_ERRORS,payload:err.response.data});});};};//Add Like\nexport var addLike=function addLike(id){return function(dispatch){axios.post(\"/api/posts/like/\".concat(id)).then(function(){return dispatch(getPosts());}).catch(function(err){return dispatch({type:GET_ERRORS,payload:err.response.data});});};};//Remove Like\nexport var removeLike=function removeLike(id){return function(dispatch){axios.post(\"/api/posts/unlike/\".concat(id)).then(function(){return dispatch(getPosts());}).catch(function(err){return dispatch({type:GET_ERRORS,payload:err.response.data});});};};// Add Comment\nexport var addComment=function addComment(postId,commentData){return function(dispatch){dispatch(clearErrors());axios.post(\"/api/posts/comment/\".concat(postId),commentData).then(function(res){return dispatch({type:GET_POST,payload:res.data});}).catch(function(err){return dispatch({type:GET_ERRORS,payload:err.response.data});});};};// Delete Comment\nexport var deleteComment=function deleteComment(postId,commentId){return function(dispatch){axios.delete(\"/api/posts/comment/\".concat(postId,\"/\").concat(commentId)).then(function(res){return dispatch({type:GET_POST,payload:res.data});}).catch(function(err){return dispatch({type:GET_ERRORS,payload:err.response.data});});};};// Set loading state\nexport var setPostLoading=function setPostLoading(){return{type:POST_LOADING};};// Clear Errors\nexport var clearErrors=function clearErrors(){return{type:CLEAR_ERRORS};};","map":{"version":3,"sources":["Z:/DevArena/client/src/actions/postActions.js"],"names":["axios","ADD_POST","CLEAR_ERRORS","DELETE_POST","GET_ERRORS","GET_POST","GET_POSTS","POST_LOADING","addPost","postData","dispatch","clearErrors","post","then","res","type","payload","data","catch","err","response","getPosts","setPostLoading","get","getPost","id","deletePost","delete","addLike","removeLike","addComment","postId","commentData","deleteComment","commentId"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { ADD_POST, CLEAR_ERRORS, DELETE_POST, GET_ERRORS, GET_POST, GET_POSTS, POST_LOADING } from './types';\r\n\r\n// Add Posts\r\nexport const addPost = postData => dispatch => {\r\n    dispatch(clearErrors());\r\n\r\n    axios\r\n        .post('/api/posts', postData)\r\n        .then(res =>\r\n            dispatch({\r\n                type: ADD_POST,\r\n                payload: res.data\r\n            })\r\n        )\r\n        .catch(err =>\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        );\r\n};\r\n\r\n// Get Posts\r\nexport const getPosts = () => dispatch => {\r\n    dispatch(setPostLoading());\r\n\r\n    axios\r\n        .get('/api/posts')\r\n        .then(res =>\r\n            dispatch({\r\n                type: GET_POSTS,\r\n                payload: res.data\r\n            })\r\n        )\r\n        .catch(() =>\r\n            dispatch({\r\n                type: GET_POSTS,\r\n                payload: null\r\n            })\r\n        );\r\n};\r\n\r\n// Get Post\r\nexport const getPost = id => dispatch => {\r\n    dispatch(setPostLoading());\r\n\r\n    axios\r\n        .get(`/api/posts/${id}`)\r\n        .then(res =>\r\n            dispatch({\r\n                type: GET_POST,\r\n                payload: res.data\r\n            })\r\n        )\r\n        .catch(() =>\r\n            dispatch({\r\n                type: GET_POST,\r\n                payload: null\r\n            })\r\n        );\r\n};\r\n\r\n// Delete Post\r\nexport const deletePost = id => dispatch => {\r\n    axios\r\n        .delete(`/api/posts/${id}`)\r\n        .then(() =>\r\n            dispatch({\r\n                type: DELETE_POST,\r\n                payload: id\r\n            })\r\n        )\r\n        .catch(err =>\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        );\r\n};\r\n\r\n//Add Like\r\nexport const addLike = id => dispatch => {\r\n    axios\r\n        .post(`/api/posts/like/${id}`)\r\n        .then(() => dispatch(getPosts()))\r\n        .catch(err =>\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        );\r\n};\r\n\r\n//Remove Like\r\nexport const removeLike = id => dispatch => {\r\n    axios\r\n        .post(`/api/posts/unlike/${id}`)\r\n        .then(() => dispatch(getPosts()))\r\n        .catch(err =>\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        );\r\n};\r\n\r\n// Add Comment\r\nexport const addComment = (postId, commentData) => dispatch => {\r\n    dispatch(clearErrors());\r\n\r\n    axios\r\n        .post(`/api/posts/comment/${postId}`, commentData)\r\n        .then(res =>\r\n            dispatch({\r\n                type: GET_POST,\r\n                payload: res.data\r\n            })\r\n        )\r\n        .catch(err =>\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        );\r\n};\r\n\r\n// Delete Comment\r\nexport const deleteComment = (postId, commentId) => dispatch => {\r\n    axios\r\n        .delete(`/api/posts/comment/${postId}/${commentId}`)\r\n        .then(res =>\r\n            dispatch({\r\n                type: GET_POST,\r\n                payload: res.data\r\n            })\r\n        )\r\n        .catch(err =>\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        );\r\n};\r\n\r\n// Set loading state\r\nexport const setPostLoading = () => {\r\n    return {\r\n        type: POST_LOADING\r\n    };\r\n};\r\n\r\n// Clear Errors\r\nexport const clearErrors = () => {\r\n    return {\r\n        type: CLEAR_ERRORS\r\n    };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}